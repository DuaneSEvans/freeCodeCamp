{"version":3,"sources":["index.js"],"names":["quotes","data","RandomQuote","props","state","index","randomIndex","this","quote","author","bind","handleClick","Math","floor","random","length","setState","id","className","type","onClick","href","target","title","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2MAQMA,EAASC,EAAKD,OAEdE,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,EAAKC,cACZ,YACE,OAAON,EAAOO,KAAKF,OAAOG,OAE5B,aACE,OAAOR,EAAOO,KAAKF,OAAOI,SAG9B,EAAKH,YAAc,EAAKA,YAAYI,KAAjB,gBACnB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBAZF,E,+CAenB,WACE,OAAOE,KAAKC,MAAOD,KAAKE,SAAWd,EAAOe,U,yBAG5C,WACE,IAAMV,EAAQE,KAAKD,cACnBC,KAAKS,SAAS,CACZX,MAAOA,EACPG,MAAOR,EAAOK,GAAOG,MACrBC,OAAQT,EAAOK,GAAOI,W,oBAI1B,WACE,OACE,8BACE,0BAASQ,GAAG,YAAYC,UAAU,cAAlC,UACE,sBAAKD,GAAG,kBAAkBC,UAAU,YAApC,UACE,qBAAIA,UAAU,YAAYD,GAAG,OAA7B,UACA,mBAAGC,UAAU,wCACVX,KAAKH,MAAMI,SAEd,mBAAGS,GAAG,SAASC,UAAU,SAAzB,SAAmCX,KAAKH,MAAMK,YAEhD,qBAAKQ,GAAG,mBAAmBC,UAAU,SAArC,SACE,wBAAQC,KAAK,SAASC,QAASb,KAAKI,YAAaO,UAAU,gBAAgBD,GAAG,YAA9E,yBAEF,qBAAKA,GAAG,yBAAyBC,UAAU,SAA3C,SACE,mBAAGG,KAAK,+BAA+BC,OAAO,SAASL,GAAG,cAAcM,MAAM,oBAA9E,SACE,8BACE,mBAAGL,UAAU,uC,GA9CHM,IAAMC,WA0DhCC,IAASC,OAAO,cAACzB,EAAD,IACd0B,SAASC,eAAe,U","file":"static/js/main.98c1c08a.chunk.js","sourcesContent":["\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n//import PropTypes from 'prop-types';\nimport './styles/style.css';\nimport data from './quotes.json'\n\n \nconst quotes = data.quotes; // this is an array of objects\n\nclass RandomQuote extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: this.randomIndex(),\n      get quote() {\n        return quotes[this.index].quote;\n      },\n      get author() {\n        return quotes[this.index].author;\n      } \n    };\n    this.randomIndex = this.randomIndex.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  randomIndex () {\n    return Math.floor((Math.random() * quotes.length));\n  }\n\n  handleClick() {\n    const index = this.randomIndex();\n    this.setState({\n      index: index,\n      quote: quotes[index].quote,\n      author: quotes[index].author\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <section id=\"quote-box\" className=\"text-center\" >\n          <div id=\"quote-container\" className=\"jumbotron\">\n            <h1 className=\"display-4\" id=\"text\">\n            <i className=\"fa fa-quote-left fa-2x fa-pull-left\"></i>\n              {this.state.quote}\n            </h1>\n            <p id=\"author\" className=\"author\">{this.state.author}</p>\n          </div>\n          <div id=\"button-container\" className=\"button\">\n            <button type=\"button\" onClick={this.handleClick} className=\"btn btn-light\" id=\"new-quote\">New Quote</button>\n          </div>\n          <div id=\"social-media-container\" className=\"button\">\n            <a href=\"www.twitter.com/intent/tweet\" target=\"_blank\" id=\"tweet-quote\" title=\"Tweet this Quote!\">\n              <div>\n                <i className=\"fa fa-twitter fa-3x\"></i>\n              </div>\n            </a>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\n\n// ReactDOM.render(componentToRender, targetNode)\nReactDOM.render(<RandomQuote />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}